{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEsCC,EAAA,CACpCC,MAAOC,SAASC,cAAc,oBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,KAAMJ,SAASC,cAAc,UAJvBI,EAA8BP,EAA9BC,MAAOO,EAAuBR,EAAvBI,KAAMK,EAAiBT,EAAjBK,OAOrB,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUV,MAAAW,IAEpBM,EAAO,CAAEP,WAAUV,MAAAW,G,GAEpBA,E,IAjB+BZ,EAATM,KAuBxBc,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBAMF,IAJA,IAAIC,EAA6B,EAAdhB,EAAMiB,MACrBC,EAA2B,EAAbjB,EAAKgB,MACnBE,EAAgC,EAAfjB,EAAOe,MAEnBG,EAAI,EAAGA,GAAKD,EAAgBC,GAAK,EACxCjB,EAAciB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAAL5B,MACjB8B,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGlB,EAAQkB,EAARlB,SAAUyB,EAAKP,EAAL5B,M,OAClB8B,EAAAjC,GAASkC,OAAOK,QAAQ,sBAAqCH,OAAfvB,EAAS,QAAYuB,OAANE,EAAM,M,IAGvEb,GAAgBE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst { delay, step, amount, form } = {\n  delay: document.querySelector('input[name=delay'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  let promiseDelay = delay.value * 1;\n  let promiseStep = step.value * 1;\n  let promiseCounter = amount.value * 1;\n\n  for (let i = 1; i <= promiseCounter; i += 1) {\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n\n    promiseDelay += promiseStep;\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$ref","delay","document","querySelector","step","amount","form","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","promiseDelay","value","promiseStep","promiseCounter","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.8c710636.js.map"}